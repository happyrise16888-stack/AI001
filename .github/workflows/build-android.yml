name: Build LibreOffice Android (CI)

on:
  workflow_dispatch:
    inputs:
      target_abi:
        description: 'Android ABI (armeabi-v7a|arm64-v8a|x86|x86_64)'
        required: true
        default: 'arm64-v8a'
      build_type:
        description: 'Build type (Debug|Release)'
        required: true
        default: 'Debug'

jobs:
  build-android:
    runs-on: ubuntu-latest
    timeout-minutes: 360 # LibreOffice 可能很慢，按需调整；自托管更佳
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          repository: LibreOffice/core
          fetch-depth: 0

      - name: Install basic deps
        run: |
          sudo apt-get update
          sudo apt-get install -y git build-essential autoconf automake \
            python3 python3-pip default-jdk unzip wget pkg-config \
            libgtk-3-dev libx11-dev libxext-dev libxrender-dev \
            libxrandr-dev libpng-dev libjpeg-dev libexpat1-dev \
            libfontconfig1-dev libfreetype6-dev libglib2.0-dev \
            cmake ninja

      - name: Setup Android SDK & NDK (cmdline tools)
        env:
          ANDROID_SDK_ROOT: ${{ runner.temp }}/android-sdk
        run: |
          mkdir -p "${ANDROID_SDK_ROOT}"
          cd "${ANDROID_SDK_ROOT}"
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip -O sdk.zip
          unzip -q sdk.zip -d cmdline-tools
          mkdir -p cmdline-tools/latest
          mv cmdline-tools/* cmdline-tools/latest/ || true
          yes | "${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager" --sdk_root="${ANDROID_SDK_ROOT}" "platform-tools" "platforms;android-33" "ndk;25.2.9519653"

      - name: Set env for Android
        run: |
          echo "ANDROID_SDK_ROOT=${{ runner.temp }}/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_HOME=${{ runner.temp }}/android-sdk" >> $GITHUB_ENV
          echo "JAVA_HOME=/usr/lib/jvm/default-java" >> $GITHUB_ENV

      - name: Create autogen.input (basic) for Android
        working-directory: ${{ github.workspace }}
        run: |
          cat > autogen.input <<'EOF'
          --disable-krb5
          --enable-Android
          --with-jdk-home=/usr/lib/jvm/default-java
          --without-system-libpng
          --without-system-libjpeg
          EOF
          git status --porcelain || true

      - name: Configure (autogen)
        working-directory: ${{ github.workspace }}
        run: |
          chmod +x ./autogen.sh || true
          ./autogen.sh --without-java --enable-android --enable-dbgutil || true

      - name: Build (attempt) Android
        working-directory: ${{ github.workspace }}/android
        env:
          ANDROID_NDK_HOME: ${{ runner.temp }}/android-sdk/ndk/25.2.9519653
        run: |
          # If android/README.cross or gradle wrapper exists, use it
          if [ -f "./gradlew" ]; then
            ./gradlew assemble${{ github.event.inputs.build_type }} || true
          else
            # fallback: try top-level make for android target (may be slow)
            cd $GITHUB_WORKSPACE || true
            make -C android || true
          fi

      - name: Collect artifacts
        run: |
          mkdir -p /tmp/lo_out
          # try common output paths
          cp -r android/app/build/outputs /tmp/lo_out 2>/dev/null || true
          cp -r android/aar/* /tmp/lo_out 2>/dev/null || true
          find . -name "*.so" -maxdepth 6 -print 2>/dev/null | xargs -I{} cp --parents {} /tmp/lo_out 2>/dev/null || true
          ls -la /tmp/lo_out || true

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: libreoffice-android-build-${{ github.event.inputs.target_abi }}-${{ github.run_number }}
          path: /tmp/lo_out
